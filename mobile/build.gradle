apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'org.greenrobot.greendao'

ext.signing = [
        storeFilePath : "/Users/briandonaldson/Desktop/Test.jks",
        storePassword : "mko09ijn",
        keyAlias      : "reidx",
        keyPassword   : "mko09ijn"
]

android {

    compileSdkVersion 25
    buildToolsVersion "26.0.0"

    buildTypes {

        debug {
            testCoverageEnabled true
            minifyEnabled false
            useProguard false
            buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.uele.reidx.android"
        minSdkVersion 21
        targetSdkVersion 25
        multiDexEnabled true
        versionCode 1
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary = true

        /* replaced with custom MockTestRunner */
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dexOptions {
        javaMaxHeapSize "4g" //specify the heap size for the dex process
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        pickFirst 'lib/armeabi-v7a/libmp3lame.so'
    }

    productFlavors {

        leads {

            applicationId 'com.uele.reidx.android.leads'

        }

        investors {

            applicationId 'com.uele.reidx.android.investors'

        }
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword project.signing.storePassword
            keyAlias project.signing.keyAlias
            keyPassword project.signing.keyPassword
        }
        release {
            storeFile file(project.signing.storeFilePath)
            storePassword project.signing.storePassword
            keyAlias project.signing.keyAlias
            keyPassword project.signing.keyPassword
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // android support libraries
    compile "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:preference-v14:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-core-utils:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"

    // Code Generator for view
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // Crash Reporting
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    // Database
    compile "org.greenrobot:greendao:$rootProject.greenDaoVersion"

    // Debug Database
    debugCompile "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // Dependency Injection
    compile "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'javax.inject:javax.inject:1'

    // Events
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.squareup:otto:1.3.8'

    // Facebook
    compile 'com.facebook.android:facebook-android-sdk:4.23.0'

    // Firebase
    compile "com.google.firebase:firebase-auth:$rootProject.fireBaseVersion"
    compile "com.google.firebase:firebase-core:$rootProject.fireBaseVersion"
    compile "com.google.firebase:firebase-database:$rootProject.fireBaseVersion"

    // Font
    compile "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // Image
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // Network
    compile "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2AndroidNetworking"
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Logger
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Reactive
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.jakewharton.byteunits:byteunits:0.9.0'
    compile 'net.danlew:android.joda:2.7.1'
    compile 'org.jetbrains:annotations:13.0'

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile 'com.google.truth:truth:0.27'
    testCompile "org.robolectric:robolectric:$rootProject.robolectricVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestCompile "com.google.dexmaker:dexmaker:$dexMakerVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    wearApp project(':wear')
    compile 'com.google.android.gms:play-services-wearable:11.0.2'
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

greendao {
    schemaVersion 1
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}
apply plugin: 'com.google.gms.google-services'
apply from: 'qa-check.gradle'
